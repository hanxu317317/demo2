{
  "_args": [
    [
      "carbon@git+ssh://git@github.com/Meiqia/carbon.git#develop",
      "/Users/hanxu/Documents/meiqia/mine/fontend_web"
    ]
  ],
  "_from": "git+ssh://git@github.com/Meiqia/carbon.git#develop",
  "_id": "carbon@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/carbon",
  "_phantomChildren": {
    "amdefine": "1.0.1",
    "ansi-escapes": "1.4.0",
    "array.prototype.find": "2.0.4",
    "async": "1.5.2",
    "babel-code-frame": "6.26.0",
    "babel-core": "6.25.0",
    "babel-plugin-istanbul": "4.1.4",
    "big.js": "3.1.3",
    "bufferstreams": "1.1.1",
    "caniuse-db": "1.0.30000727",
    "cliui": "2.1.0",
    "clone": "1.0.2",
    "commondir": "1.0.1",
    "compression": "1.7.0",
    "concat-stream": "1.6.0",
    "connect-history-api-fallback": "1.3.0",
    "css-selector-tokenizer": "0.7.0",
    "cssnano": "3.10.0",
    "debug": "2.6.8",
    "decamelize": "1.2.0",
    "doctrine": "2.0.0",
    "electron-to-chromium": "1.3.21",
    "emojis-list": "2.1.0",
    "enhanced-resolve": "0.9.1",
    "escape-string-regexp": "1.0.5",
    "escope": "3.6.0",
    "espree": "3.5.0",
    "esquery": "1.0.0",
    "estraverse": "4.2.0",
    "esutils": "2.0.2",
    "express": "4.15.4",
    "file-entry-cache": "2.0.0",
    "glob": "7.1.2",
    "globals": "9.18.0",
    "graceful-fs": "4.1.11",
    "gulp-util": "3.0.8",
    "has": "1.0.1",
    "has-ansi": "2.0.0",
    "http-proxy-middleware": "0.17.4",
    "ignore": "3.3.5",
    "imurmurhash": "0.1.4",
    "inquirer": "0.12.0",
    "is-ci": "1.0.10",
    "is-my-json-valid": "2.16.1",
    "is-resolvable": "1.0.0",
    "isarray": "1.0.0",
    "istanbul-api": "1.1.14",
    "istanbul-lib-coverage": "1.1.1",
    "istanbul-lib-instrument": "1.8.0",
    "jest-changed-files": "19.0.2",
    "jest-config": "19.0.4",
    "jest-environment-jsdom": "19.0.2",
    "jest-haste-map": "19.0.2",
    "jest-jasmine2": "19.0.2",
    "jest-message-util": "19.0.0",
    "jest-regex-util": "19.0.0",
    "jest-resolve-dependencies": "19.0.0",
    "jest-runtime": "19.0.4",
    "jest-snapshot": "19.0.2",
    "jest-util": "19.0.2",
    "js-base64": "2.2.0",
    "js-yaml": "3.7.0",
    "json-stable-stringify": "1.0.1",
    "json5": "0.5.1",
    "jsx-ast-utils": "1.4.1",
    "levn": "0.3.0",
    "lodash": "4.17.4",
    "lodash.camelcase": "4.3.0",
    "memory-fs": "0.3.0",
    "micromatch": "2.3.11",
    "mkdirp": "0.5.1",
    "natural-compare": "1.4.0",
    "node-libs-browser": "0.7.0",
    "node-notifier": "5.1.2",
    "normalize-range": "0.1.2",
    "num2fraction": "1.2.2",
    "object-assign": "4.1.1",
    "object.assign": "4.0.4",
    "open": "0.0.5",
    "optimist": "0.6.1",
    "optionator": "0.8.2",
    "os-homedir": "1.0.2",
    "path-is-inside": "1.0.2",
    "pinkie-promise": "2.0.1",
    "pluralize": "1.2.1",
    "postcss-load-config": "1.2.0",
    "postcss-modules-extract-imports": "1.1.0",
    "postcss-modules-local-by-default": "1.2.0",
    "postcss-modules-scope": "1.1.0",
    "postcss-modules-values": "1.3.0",
    "postcss-value-parser": "3.3.0",
    "progress": "1.1.8",
    "react-hot-api": "0.4.7",
    "require-uncached": "1.0.3",
    "serve-index": "1.9.0",
    "shelljs": "0.7.8",
    "slash": "1.0.0",
    "sockjs": "0.3.18",
    "sockjs-client": "1.1.4",
    "source-list-map": "0.1.8",
    "source-map": "0.5.7",
    "stream-cache": "0.0.2",
    "string-length": "1.0.1",
    "strip-ansi": "3.0.1",
    "strip-json-comments": "2.0.1",
    "table": "3.8.3",
    "tapable": "0.1.10",
    "text-table": "0.2.0",
    "throat": "3.2.0",
    "uglify-to-browserify": "1.0.2",
    "watchpack": "0.2.9",
    "webpack-core": "0.6.9",
    "webpack-dev-middleware": "1.12.0",
    "webpack-sources": "0.1.5",
    "which": "1.3.0",
    "window-size": "0.1.0",
    "worker-farm": "1.5.0",
    "yargs": "6.6.0"
  },
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/Meiqia/carbon/develop/package.json",
      "gitUrl": "git://github.com/Meiqia/carbon.git#develop",
      "httpsUrl": "git+https://github.com/Meiqia/carbon.git#develop",
      "shortcut": "github:Meiqia/carbon#develop",
      "ssh": "git@github.com:Meiqia/carbon.git#develop",
      "sshUrl": "git+ssh://git@github.com/Meiqia/carbon.git#develop",
      "type": "github"
    },
    "name": "carbon",
    "raw": "carbon@git+ssh://git@github.com/Meiqia/carbon.git#develop",
    "rawSpec": "git+ssh://git@github.com/Meiqia/carbon.git#develop",
    "scope": null,
    "spec": "git+ssh://git@github.com/Meiqia/carbon.git#develop",
    "type": "hosted"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git+ssh://git@github.com/Meiqia/carbon.git#e5ac07e20b618cc039f9ebb2fb804fc6637f4a50",
  "_shasum": "e3db6c888ba3343e9a58cf51532aab0717060b41",
  "_shrinkwrap": null,
  "_spec": "carbon@git+ssh://git@github.com/Meiqia/carbon.git#develop",
  "_where": "/Users/hanxu/Documents/meiqia/mine/fontend_web",
  "author": {
    "name": "Meiqia/Fontend"
  },
  "bugs": {
    "url": "https://github.com/Meiqia/carbon/issues"
  },
  "dependencies": {
    "autoprefixer": "^6.5.3",
    "babel-cli": "^6.18.0",
    "babel-core": "^6.22.1",
    "babel-eslint": "^7.1.1",
    "babel-jest": "^19.0.0",
    "babel-loader": "^6.2.8",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-class-properties": "^6.19.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-node-env-inline": "^6.8.0",
    "babel-plugin-transform-react-display-name": "^6.8.0",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-polyfill": "^6.20.0",
    "babel-preset-latest": "^6.16.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-0": "^6.16.0",
    "babel-preset-stage-3": "^6.17.0",
    "babel-register": "^6.18.0",
    "babel-runtime": "^6.6.1",
    "classnames": "^2.2.5",
    "css-loader": "^0.26.0",
    "draft-js": "0.7.0",
    "ejs": "^2.5.5",
    "enzyme": "^2.8.0",
    "eslint": "^3.12.2",
    "eslint-loader": "^1.6.3",
    "eslint-plugin-react": "^6.8.0",
    "expect": "^1.20.2",
    "extract-text-webpack-plugin": "^1.0.1",
    "file-loader": "^0.9.0",
    "fs": "0.0.1-security",
    "gulp": "^3.9.1",
    "gulp-eslint": "^3.0.1",
    "image-webpack-loader": "^3.0.0",
    "immutable": "^3.8.1",
    "input-format": "^0.1.7",
    "jest": "^19.0.2",
    "json-loader": "^0.5.4",
    "libphonenumber-js": "^0.4.22",
    "lodash": "^4.17.2",
    "moment": "^2.17.0",
    "postcss-calc": "5.3.1",
    "postcss-each": "^0.9.3",
    "postcss-global-import": "^1.0.0",
    "postcss-import": "^9.0.0",
    "postcss-loader": "^1.1.1",
    "postcss-mixins": "^5.4.1",
    "postcss-nested": "^1.0.0",
    "postcss-scss": "^0.4.0",
    "postcss-selector-not": "^2.0.0",
    "precss": "^1.4.0",
    "prop-types": "^15.5.10",
    "react": "^15.5.4",
    "react-addons-test-utils": "15.4.0",
    "react-dom": "^15.4.1",
    "react-element-to-string": "^1.0.2",
    "react-hot-loader": "^1.3.0",
    "react-markdown": "^2.4.2",
    "react-styling": "^1.6.1",
    "scroll-into-view-if-needed": "^1.1.0",
    "style-loader": "^0.13.1",
    "url-loader": "^0.5.7",
    "webpack": "^1.14.0",
    "webpack-dev-server": "^1.16.2",
    "webpack-uglify-parallel": "^0.1.3"
  },
  "description": "Meiqia Carbon Design System",
  "devDependencies": {},
  "files": [
    ".babelrc",
    "src",
    "webpack",
    "scripts",
    "site",
    "package.json"
  ],
  "gitHead": "e5ac07e20b618cc039f9ebb2fb804fc6637f4a50",
  "homepage": "https://github.com/Meiqia/carbon#readme",
  "jest": {
    "testPathIgnorePatterns": [
      "/node_modules/",
      "lib"
    ]
  },
  "keywords": [
    "Meiqia",
    "react",
    "ui",
    "carbon",
    "lighting"
  ],
  "main": "lib/index.js",
  "name": "carbon",
  "optionalDependencies": {},
  "readme": "# carbon\nMeiqia Fontend Lighting UI Components\n\n# components 编写方式\n简单想了一下.我们要写的组件是为了尽可能的复用,因此components用<b>无状态函数式组件</b>这种写法较为合试,将大量的无状态组件交给用户去自行组合从而生成应用.\n\n无状态函数式组件的写法是 \n\n```\nfunction HelloComponent(props, /* context */){\n  return <div>Hello {props.name}</div>\n}\n```\n\n无状态函数式组件的特点:\n\n  \n1.  组件不会被实例化，整体渲染性能得到提升\n2.  组件不能访问this对象\n3.  组件无法访问生命周期的方法\n4.  代码可读性较好.\n\n无状态组件的编程思路,这里以一个Modal为例,结构可以分为\n\n- Portal\n- Modal\n\t- ModalHeader\n\t- ModaLBody\n\t- ModalFooter\n\n```\nconst Modal = props => \n\t<div class='modal'>\n\t\t{props.children}\n\t</div>\nconst ModalHeader = ...;\nconst ModalBody = ...;\nconst ModalFooter = ...;\nconst Portal = ...;\n//在用户层面,用法可以调用以下组合方式进行操作.\n<Portal>\n\t<Modal>\n\t\t<ModalHeader>\n\t\t\t<h3>i am a header</h3>\n\t\t\t<icon onclick={closefunc}></icon>\n\t\t</ModalHeader>\n\t\t<ModalBody>\n\t\t\t<p>i am the body</p>\n\t\t</ModalBody>\n\t\t<ModalFooter>\n\t\t\t<button>save</button>\n\t\t</ModalFOoter>\n\t</Modal>\n</Portal>\n\n```\n组件更多的体现的是样式上的展示,而并非逻辑.这就是基础组件要做的事情,可以在组件上预留一些接口,但是这些接口在实现的时候要考虑是否是必须的.这些接口,是否会影响这些基础组件的<b>可拓展性.可组合性.</b>这才是我们要写基础组件的意义.\n \n \n# style 命名规范\n\n### 为什么要制定命名规范?\n\n统一命名规范,便于团队协作开发是代码风格统一,减少沟通成本,使项目能更方便的维护\n\n### BEM\n\nBEM的意思就是块（block）、元素（element）、修饰符（modifier），是由Yandex团队提出的一种CSS Class 命名方法。\n\nBEM的命名规矩很容易记：block-name__element-name--modifier-name，也就是模块名 + 元素名 + 修饰器名。\n\nBEM解决这一问题的思路在于，由于项目开发中，每个组件都是唯一无二的，其名字也是独一无二的，组件内部元素的名字都加上组件名，并用元素的名字作为选择器，自然组件内的样式就不会与组件外的样式冲突了。\n\n    .block{}\n    .block__element{}\n    .block--modifier{}\n    \n### Meiqia UI 规范\n\n参考 BEM\n举例子，如果你想要造一个房子，那么整个整个房子的 class就是 .house\n那么这个房子的门就是 .house__door ，窗户就是 .house__window\n如果这是一个灰房子，那么房子的这个这个时候 class 就应该是 .house--gray\n如果这个房子有个粉色的门，那么这时候应该是 .house__door--pink\n\n比如我们想要一块文字显示的小一些，那么他的 class 可以为 .slds-text-body--small，大一些的可以是 .slds-text-heading--large\n\n为了让我们的组件可以跟其他的组件能够兼容使用，我们需要给自己的组件加上一个前缀的命名空间，比如暂定为 .mcds-，（Meiqia CRM Design System）,比如我们定义一个按钮样式，这时应该是 .mcds-button 而不是 .button\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Meiqia/carbon.git"
  },
  "scripts": {
    "build": "node scripts/_render.js && babel ./src --out-dir ./lib --copy-files",
    "dev": "node scripts/_render.js && webpack-dev-server --inline --host 0.0.0.0 --port 8300  --config ./webpack/dev-server.js --content-base site/",
    "example": "webpack-dev-server --host 0.0.0.0 --port 8300  --content-base example/",
    "examplePackage": "node scripts/_render.js && webpack  --progress --stats --config webpack/example.config.babel.js --profile",
    "lint": "eslint ./src/*",
    "package": "node scripts/_render.js &&webpack  --progress --stats --config webpack/dev.config.babel.js --profile",
    "postinstall": "npm run build",
    "test": "jest"
  },
  "version": "1.0.0"
}
