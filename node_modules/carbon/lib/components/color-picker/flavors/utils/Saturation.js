'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Saturation = function (_React$Component) {
    (0, _inherits3.default)(Saturation, _React$Component);

    function Saturation() {
        (0, _classCallCheck3.default)(this, Saturation);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Saturation.__proto__ || (0, _getPrototypeOf2.default)(Saturation)).call(this));

        _this.throttle = _lodash2.default.throttle(function (fn, data) {
            fn(data);
        }, 50);

        _this.handleChange = _this.handleChange.bind(_this);
        _this.handleMouseDown = _this.handleMouseDown.bind(_this);
        _this.handleMouseUp = _this.handleMouseUp.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(Saturation, [{
        key: 'handleChange',
        value: function handleChange(e, skip) {
            if (!skip) {
                e.preventDefault();
            }
            var container = this.refs.container;
            var containerWidth = container.clientWidth;
            var containerHeight = container.clientHeight;
            var left = (e.pageX || e.touches[0].pageX) - (container.getBoundingClientRect().left + window.pageXOffset);
            var top = (e.pageY || e.touches[0].pageY) - (container.getBoundingClientRect().top + window.pageYOffset);

            if (left < 0) {
                left = 0;
            } else if (left > containerWidth) {
                left = containerWidth;
            } else if (top < 0) {
                top = 0;
            } else if (top > containerHeight) {
                top = containerHeight;
            }

            var saturation = left * 100 / containerWidth;
            var bright = -(top * 100 / containerHeight) + 100;

            this.throttle(this.props.onChange, {
                h: this.props.hsl.h,
                s: saturation,
                v: bright,
                a: this.props.hsl.a
            });
        }
    }, {
        key: 'handleMouseDown',
        value: function handleMouseDown(e) {
            this.handleChange(e, true);
            window.addEventListener('mousemove', this.handleChange);
            window.addEventListener('mouseup', this.handleMouseUp);
        }
    }, {
        key: 'handleMouseUp',
        value: function handleMouseUp() {
            window.removeEventListener('mousemove', this.handleChange);
            window.removeEventListener('mouseup', this.handleMouseUp);
        }
    }, {
        key: 'render',
        value: function render() {
            var style = {
                color: {
                    position: 'absolute',
                    top: '0px',
                    left: '0px',
                    right: '0px',
                    bottom: '0px',
                    background: 'hsl(' + this.props.hsl.h + ',100%, 50%)',
                    borderRadius: this.props.radius
                },
                white: {
                    position: 'absolute',
                    top: '0px',
                    left: '0px',
                    right: '0px',
                    bottom: '0px',
                    background: 'linear-gradient(to right, #fff, rgba(255,255,255,0))'
                },
                black: {
                    position: 'absolute',
                    top: '0px',
                    left: '0px',
                    right: '0px',
                    bottom: '0px',
                    background: 'linear-gradient(to top, #000, rgba(0,0,0,0))',
                    boxShadow: this.props.shadow
                },
                pointer: {
                    position: 'absolute',
                    right: '0px',
                    bottom: '0px',
                    top: -(this.props.hsv.v * 100) + 100 + '%',
                    left: this.props.hsv.s * 100 + '%',
                    cursor: 'default'
                },
                circle: {
                    width: '4px',
                    height: '4px',
                    boxShadow: '0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3), 0 0 1px 2px rgba(0,0,0,.4)',
                    borderRadius: '50%',
                    cursor: 'hand',
                    transform: 'translate(-2px, -2px)'
                }
            };
            var pointer = _react2.default.createElement('div', { style: style.circle });

            if (this.props.pointer) {
                pointer = _react2.default.createElement(this.props.pointer, this.props);
            }

            return _react2.default.createElement(
                'div',
                { style: style.color, ref: 'container', onMouseDown: this.handleMouseDown, onTouchMove: this.handleChange },
                _react2.default.createElement(
                    'div',
                    { style: style.white },
                    _react2.default.createElement('div', { style: style.black }),
                    _react2.default.createElement(
                        'div',
                        { style: style.pointer, ref: 'pointer' },
                        pointer
                    )
                )
            );
        }
    }]);
    return Saturation;
}(_react2.default.Component);

Saturation.propTypes = {
    onChange: _propTypes2.default.func,
    hsl: _propTypes2.default.object,
    hsv: _propTypes2.default.object,
    rgb: _propTypes2.default.object,
    radius: _propTypes2.default.string,
    shadow: _propTypes2.default.string,
    pointer: _propTypes2.default.object
};
exports.default = Saturation;
module.exports = exports['default'];