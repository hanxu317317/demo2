'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Checkboard = function (_React$Component) {
    (0, _inherits3.default)(Checkboard, _React$Component);

    function Checkboard() {
        (0, _classCallCheck3.default)(this, Checkboard);
        return (0, _possibleConstructorReturn3.default)(this, (Checkboard.__proto__ || (0, _getPrototypeOf2.default)(Checkboard)).apply(this, arguments));
    }

    (0, _createClass3.default)(Checkboard, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this._checkboardCache = {};
        }
    }, {
        key: 'renderCheckboard',
        value: function renderCheckboard(c1, c2, size) {
            if (typeof document === 'undefined') {
                return null;
            }
            // Dont Render On Server
            var canvas = document.createElement('canvas');
            canvas.width = canvas.height = size * 2;
            var ctx = canvas.getContext('2d');
            ctx.fillStyle = c1;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = c2;
            ctx.fillRect(0, 0, size, size);
            ctx.translate(size, size);
            ctx.fillRect(0, 0, size, size);
            return canvas.toDataURL();
        }
    }, {
        key: 'getCheckboard',
        value: function getCheckboard(c1, c2, size) {
            var key = c1 + ',' + c2 + ',' + size;

            if (this._checkboardCache[key]) {
                return this._checkboardCache[key];
            }
            var checkboard = this.renderCheckboard(c1, c2, size);
            this._checkboardCache[key] = checkboard;
            return checkboard;
        }
    }, {
        key: 'render',
        value: function render() {
            var background = this.getCheckboard(this.props.white, this.props.grey, this.props.size);
            var style = {
                grid: {
                    position: 'absolute',
                    top: '0px',
                    left: '0px',
                    right: '0px',
                    bottom: '0px',
                    background: 'url(' + background + ') center left'
                }
            };
            return _react2.default.createElement('div', { style: style.grid, ref: 'grid' });
        }
    }]);
    return Checkboard;
}(_react2.default.Component);

Checkboard.propTypes = {
    grey: _propTypes2.default.string,
    white: _propTypes2.default.string,
    size: _propTypes2.default.number
};
exports.default = Checkboard;


Checkboard.defaultProps = {
    size: 8,
    white: '#fff',
    grey: '#e6e6e6'
};
module.exports = exports['default'];