'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _index = require('./index');

var _reactMarkdown = require('react-markdown');

var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EditorExampleCode = '\nclass EditorExample extends React.Component {\n    componentWillMount() {\n        this.state = {\n            text: \'\'\n        };   \n    }\n    onChange() {\n        this.setState({\n            text:this.refs.editor.html()\n        });\n    }\n    render() {\n        return (\n            <div>\n                <Editor \n                    ref="editor"\n                    onChange={::this.onChange}\n                />\n                <div style={{border:\'1px solid #333\',minHeight:\'100px\'}}>{this.state.text}</div>\n            </div>\n        )\n    }\n}';

var EditorExample = function (_React$Component) {
    (0, _inherits3.default)(EditorExample, _React$Component);

    function EditorExample() {
        (0, _classCallCheck3.default)(this, EditorExample);
        return (0, _possibleConstructorReturn3.default)(this, (EditorExample.__proto__ || (0, _getPrototypeOf2.default)(EditorExample)).apply(this, arguments));
    }

    (0, _createClass3.default)(EditorExample, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.state = {
                text: ''
            };
        }
    }, {
        key: 'onChange',
        value: function onChange() {
            this.setState({
                text: this.refs.editor.html()
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(_index.Editor, {
                    error: true,
                    ref: 'editor',
                    onChange: this.onChange.bind(this) }),
                _react2.default.createElement(
                    'div',
                    { style: { border: '1px solid #333', minHeight: 100, marginTop: 10 } },
                    this.state.text
                )
            );
        }
    }]);
    return EditorExample;
}(_react2.default.Component);

var Intro = '##### 这里是富文本组件\r\n\r\n- 可以通过fontSizeStyle参数来决定有无字体按钮\r\n\t- 下面是输出的内容，放到innerHTML里就好，在此不细表\r\n\t- 空行暂时用<div></div>标签，有了全局样式的空行再行修改\r\n\t- color使用颜色组件，会有一些问题，暂时没用，后续会进行修改\t\r\n\t- 去链接在点开链接弹出框后面，没有放在编辑器上方\r\n';
exports.default = [{
    id: 'Editor',
    element: _react2.default.createElement(EditorExample, null),
    intro: _react2.default.createElement(_reactMarkdown2.default, { className: 'markdown', source: Intro }),
    code: EditorExampleCode
}];
module.exports = exports['default'];