'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.insertImage = exports.mediaBlockRenderer = exports.Loading = exports.ImageButton = exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _button = require('./button');

var _button2 = _interopRequireDefault(_button);

var _loading = require('./loading');

var _loading2 = _interopRequireDefault(_loading);

var _render = require('./render');

var _render2 = _interopRequireDefault(_render);

var _insertImage = require('./insert-image');

var _insertImage2 = _interopRequireDefault(_insertImage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Image = function (_Component) {
    (0, _inherits3.default)(Image, _Component);

    function Image() {
        (0, _classCallCheck3.default)(this, Image);
        return (0, _possibleConstructorReturn3.default)(this, (Image.__proto__ || (0, _getPrototypeOf2.default)(Image)).apply(this, arguments));
    }

    (0, _createClass3.default)(Image, [{
        key: 'handleChange',
        value: function handleChange(e) {
            var _props = this.props,
                onUpload = _props.onUpload,
                onChange = _props.onChange,
                editorState = _props.editorState;

            var file = e.target.files[0];
            this.refs.btn.clear();
            if (onUpload) {
                var promise = onUpload(file);
                if (!promise.then) {
                    throw new Error('onUpload mast return a promise');
                }
                promise.then(function (src) {
                    if (src) {
                        onChange((0, _insertImage2.default)(editorState, src));
                    }
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_button2.default, { ref: 'btn', onChange: this.handleChange.bind(this) });
        }
    }]);
    return Image;
}(_react.Component);

exports.default = Image;


Image.propTypes = {
    editorState: _propTypes2.default.object.isRequired,
    onChange: _propTypes2.default.func.isRequired,
    onUpload: _propTypes2.default.func.isRequired
};

exports.ImageButton = _button2.default;
exports.Loading = _loading2.default;
exports.mediaBlockRenderer = _render2.default;
exports.insertImage = _insertImage2.default;