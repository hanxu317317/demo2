'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

exports.default = memory;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 返回一个带记忆功能的函数
 * 函数执行一次后把结果缓存下来，下次参数一致的情况下，直接从缓存里面取
 * 用于计算较昂贵，并且调用频繁的函数
 * 以参数为键来缓存，目前只适合简单参数。
 *
 * const factorial = n => {
 *     if(n == 1) return 1
 *     return n * factorial(n - 1)
 * }
 *
 * const memoryFactorial = memory(factorial);
 *
 * memoryFactorial(10);
 * memoryFactorial(10);
 *
 */
function memory(fn) {
    if (!(typeof fn === 'function')) {
        throw new ReferenceError('the argument muse be a function');
    }
    var struct = {};
    return function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        var key = (0, _stringify2.default)(args);
        if (!struct[key]) {
            struct[key] = fn.apply(null, args);
            return struct[key];
        }
    };
}
module.exports = exports['default'];