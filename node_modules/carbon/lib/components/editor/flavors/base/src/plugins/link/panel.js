'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _components = require('../../components');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable react/no-find-dom-node */
var Panel = function (_Component) {
    (0, _inherits3.default)(Panel, _Component);

    function Panel() {
        (0, _classCallCheck3.default)(this, Panel);
        return (0, _possibleConstructorReturn3.default)(this, (Panel.__proto__ || (0, _getPrototypeOf2.default)(Panel)).apply(this, arguments));
    }

    (0, _createClass3.default)(Panel, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.setUrl(this.props.url);
        }
    }, {
        key: 'handleKeyDown',
        value: function handleKeyDown(e) {
            var url = this.refs.url.value.trim();
            if (e.keyCode === 13 && url) {
                this.handleChange(resolveUrl(url));
            }
        }
    }, {
        key: 'handleChange',
        value: function handleChange(url) {
            this.props.onChange(url);
        }
    }, {
        key: 'handleClickOutside',
        value: function handleClickOutside() {
            var url = this.refs.url.value;
            if (url) {
                this.handleChange(resolveUrl(url));
            }
        }
    }, {
        key: 'setUrl',
        value: function setUrl(url) {
            this.refs.url.value = url;
            var btnDom = _reactDom2.default.findDOMNode(this.refs.cancelBtn);
            if (btnDom) {
                if (url) {
                    btnDom.style.display = '';
                } else {
                    btnDom.style.display = 'none';
                }
            }
        }
    }, {
        key: 'focus',
        value: function focus() {
            _reactDom2.default.findDOMNode(this.refs.url).focus();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var url = this.props.url;

            return _react2.default.createElement(
                _components.ClickOutside,
                { onClickOutside: this.handleClickOutside.bind(this) },
                _react2.default.createElement(
                    'div',
                    { className: 'mcds-editor__link-root' },
                    _react2.default.createElement(
                        'label',
                        null,
                        '\u94FE\u63A5\u5730\u5740\uFF1A'
                    ),
                    _react2.default.createElement('input', {
                        type: 'text',
                        ref: 'url',
                        defaultValue: url,
                        onKeyDown: this.handleKeyDown.bind(this) }),
                    _react2.default.createElement(_components.IconButton, { onClick: function onClick() {
                            return _this2.handleChange('');
                        }, ref: 'cancelBtn', style: { marginLeft: 16 }, name: 'mcds-icon__unlink-18' })
                )
            );
        }
    }]);
    return Panel;
}(_react.Component);

exports.default = Panel;


Panel.propTypes = {
    url: _propTypes2.default.string,
    onChange: _propTypes2.default.func.isRequired
};

var REG_URL = /^https?:\/\//;

var resolveUrl = function resolveUrl(url) {
    if (REG_URL.test(url)) {
        return url;
    }
    return 'http://' + url;
};
module.exports = exports['default'];