'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FONT_SIZE_MAP = exports.default = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _draftJs = require('draft-js');

var _components = require('../../components');

var _buttons = require('../buttons');

var _panel = require('./panel');

var _panel2 = _interopRequireDefault(_panel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FontSize = function (_Component) {
    (0, _inherits3.default)(FontSize, _Component);

    function FontSize() {
        (0, _classCallCheck3.default)(this, FontSize);
        return (0, _possibleConstructorReturn3.default)(this, (FontSize.__proto__ || (0, _getPrototypeOf2.default)(FontSize)).apply(this, arguments));
    }

    (0, _createClass3.default)(FontSize, [{
        key: 'handleChange',
        value: function handleChange(fontSize) {
            this.refs.popover.hide();
            var newEditorState = changeFontSize(this.props.editorState, 'F_' + fontSize);
            this.props.onChange(newEditorState);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _components.Popover,
                {
                    ref: 'popover',
                    placement: 'bottom',
                    position: { left: 65, top: -14 },
                    content: _react2.default.createElement(_panel2.default, { onClick: this.handleChange.bind(this) }) },
                _react2.default.createElement(_buttons.FontSizeButton, null)
            );
        }
    }]);
    return FontSize;
}(_react.Component);

exports.default = FontSize;


FontSize.propTypes = {
    onChange: _propTypes2.default.func,
    editorState: _propTypes2.default.object
};

var FONT_SIZE_MAP = {
    F_12: {
        fontSize: '12px'
    },
    F_13: {
        fontSize: '13px'
    },
    F_14: {
        fontSize: '14px'
    },
    F_16: {
        fontSize: '16px'
    },
    F_18: {
        fontSize: '18px'
    },
    F_20: {
        fontSize: '20px'
    },
    F_24: {
        fontSize: '24px'
    }
};

var changeFontSize = function changeFontSize(editorState, size) {
    var selection = editorState.getSelection();
    var nextContentState = (0, _keys2.default)(FONT_SIZE_MAP).reduce(function (contentState, key) {
        return _draftJs.Modifier.removeInlineStyle(contentState, selection, key);
    }, editorState.getCurrentContent());
    var nextEditorState = _draftJs.EditorState.push(editorState, nextContentState, 'change-inline-style');

    var currentStyle = editorState.getCurrentInlineStyle();

    if (selection.isCollapsed()) {
        nextEditorState = currentStyle.reduce(function (state, key) {
            return _draftJs.RichUtils.toggleInlineStyle(state, key);
        }, nextEditorState);
    }

    if (!currentStyle.has(size)) {
        nextEditorState = _draftJs.RichUtils.toggleInlineStyle(nextEditorState, size);
    }
    return nextEditorState;
};

exports.FONT_SIZE_MAP = FONT_SIZE_MAP;