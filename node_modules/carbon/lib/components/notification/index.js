'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _alert = require('./flavors/alert');

var _alert2 = _interopRequireDefault(_alert);

var _stackNotifications = require('./flavors/stack/stack-notifications');

var _stackNotifications2 = _interopRequireDefault(_stackNotifications);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Notify = function () {
    function Notify() {
        (0, _classCallCheck3.default)(this, Notify);
    }

    (0, _createClass3.default)(Notify, [{
        key: 'setNotify',
        value: function setNotify(notify) {
            this.notify = notify;
        }
    }, {
        key: 'setNotifyList',
        value: function setNotifyList(notifyList) {
            this.notifyList = notifyList;
        }
    }, {
        key: 'add',
        value: function add(options) {
            var op = {};
            if (typeof options === 'string') {
                op.message = options;
            } else {
                op = options;
            }

            if (options.dismissAfter === undefined) {
                op.dismissAfter = 5000;
            }

            this.notifyList.add(op);
        }
    }, {
        key: 'show',
        value: function show(options) {
            var op = options;
            if (typeof op === 'string') {
                op = { message: op, dismissAfter: false };
            } else {
                op.dismissAfter = false;
            }
            this.notify.show(op);
        }
    }]);
    return Notify;
}(); /**
      * https://www.lightningdesignsystem.com/components/notifications/
      * 1. 提示通知横幅条
      * 2. 信息提示条
      * 3. 提示框
      * 4. 情景提示弹窗提示
      */


var notify = new Notify();

var Notifications = function Notifications() {
    return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_stackNotifications2.default, { ref: function ref(node) {
                notify.setNotifyList(node);
            } }),
        _react2.default.createElement(_alert2.default, { ref: function ref(node) {
                notify.setNotify(node);
            } })
    );
};
window.notify = notify;
// export {
//     notify
// };

// export default Notifications;
exports.default = {
    Notifications: Notifications,
    notify: notify
};
module.exports = exports['default'];