'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _index = require('./index.jsx');

var _reactMarkdown = require('react-markdown');

var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

var _index2 = require('../index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Demo = function Demo(props) {
    return _react2.default.createElement(
        'section',
        { id: 'Popover', className: 'component' },
        _react2.default.createElement(
            'h1',
            null,
            'Popover'
        ),
        _react2.default.createElement(
            'div',
            { className: 'example' },
            _react2.default.createElement(
                'div',
                { className: 'example-content' },
                props.children
            )
        )
    );
};

Demo.propTypes = {
    children: _propTypes2.default.any
};

// 最基本的popover
var PopoverDemo = function PopoverDemo(props) {
    return _react2.default.createElement(
        _index.Popover,
        { className: props.className },
        _react2.default.createElement(
            _index.PopoverBody,
            null,
            'i am the content;'
        )
    );
};

PopoverDemo.propTypes = {
    children: _propTypes2.default.any,
    className: _propTypes2.default.string
};

// 主题色为info的popover
var PopoverDemoThemeInfo = function PopoverDemoThemeInfo(props) {
    return _react2.default.createElement(
        _index.Popover,
        { theme: 'info', className: props.className },
        _react2.default.createElement(
            _index.PopoverBody,
            null,
            'theme\u4E3Ainfo'
        )
    );
};

PopoverDemoThemeInfo.propTypes = {
    className: _propTypes2.default.string
};

// 主题色为error的popover
var PopoverDemoThemeError = function PopoverDemoThemeError(props) {
    return _react2.default.createElement(
        _index.Popover,
        { theme: 'error', className: props.className },
        _react2.default.createElement(
            _index.PopoverBody,
            null,
            'theme\u4E3Aerror',
            _react2.default.createElement(
                'p',
                null,
                '123'
            ),
            _react2.default.createElement(
                'p',
                null,
                '123'
            ),
            _react2.default.createElement(
                'p',
                null,
                '123'
            ),
            _react2.default.createElement(
                'p',
                null,
                '123'
            )
        )
    );
};

PopoverDemoThemeError.propTypes = {
    className: _propTypes2.default.string
};

// 主题色为warning的popover
var PopoverDemoThemeWarning = function PopoverDemoThemeWarning(props) {
    return _react2.default.createElement(
        _index.Popover,
        { theme: 'warning', className: props.className },
        _react2.default.createElement(
            _index.PopoverBody,
            null,
            'theme\u4E3Awarning'
        )
    );
};

PopoverDemoThemeWarning.propTypes = {
    className: _propTypes2.default.string
};

// 主题色为success的popover
var PopoverDemoThemeSuccess = function PopoverDemoThemeSuccess(props) {
    return _react2.default.createElement(
        _index.Popover,
        { theme: 'success', className: props.className },
        _react2.default.createElement(
            _index.PopoverBody,
            null,
            'theme\u4E3Ainfo'
        )
    );
};

PopoverDemoThemeSuccess.propTypes = {
    className: _propTypes2.default.string
};

var PopoverDefault = function PopoverDefault() {
    return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
                'p',
                null,
                '\u5355\u4E00\u65B9\u5411\u5982left,top,right,bottom'
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'top', overlay: _react2.default.createElement(PopoverDemo, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '0px' }, className: 'mcds-button__neutral' },
                    'top'
                )
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'right', overlay: _react2.default.createElement(PopoverDemo, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '0px' }, className: 'mcds-button__neutral' },
                    'right'
                )
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'bottom', overlay: _react2.default.createElement(PopoverDemo, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '0px' }, className: 'mcds-button__neutral' },
                    'bottom'
                )
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'left', overlay: _react2.default.createElement(PopoverDemo, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '0px' }, className: 'mcds-button__neutral' },
                    'left'
                )
            )
        ),
        _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
                'p',
                null,
                '\u590D\u5408\u65B9\u5411 top/bottom'
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'top-right', overlay: _react2.default.createElement(PopoverDemoThemeError, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '40px' }, className: 'mcds-button__neutral' },
                    'top-right'
                )
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'top-left', overlay: _react2.default.createElement(PopoverDemoThemeError, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '40px' }, className: 'mcds-button__neutral' },
                    'top-left'
                )
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'bottom-left', overlay: _react2.default.createElement(PopoverDemoThemeError, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '40px' }, className: 'mcds-button__neutral' },
                    'bottom-left'
                )
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'bottom-right', overlay: _react2.default.createElement(PopoverDemoThemeError, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '40px' }, className: 'mcds-button__neutral' },
                    'bottom-right'
                )
            )
        ),
        _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
                'p',
                null,
                '\u590D\u5408\u65B9\u5411 left/right'
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'left-top', overlay: _react2.default.createElement(PopoverDemoThemeError, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '40px' }, className: 'mcds-button__neutral' },
                    'left-top'
                )
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'left-bottom', overlay: _react2.default.createElement(PopoverDemoThemeError, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '40px' }, className: 'mcds-button__neutral' },
                    'left-bottom'
                )
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'right-top', overlay: _react2.default.createElement(PopoverDemoThemeError, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '40px' }, className: 'mcds-button__neutral' },
                    'right-top'
                )
            ),
            _react2.default.createElement(
                _index.PopoverTrigger,
                { triggerBy: 'click', placement: 'right-bottom', overlay: _react2.default.createElement(PopoverDemoThemeError, null) },
                _react2.default.createElement(
                    _index2.Button,
                    { style: { marginLeft: '40px' }, className: 'mcds-button__neutral' },
                    'right-bottom'
                )
            )
        )
    );
};

var PopoverDefaultCode = '\nlet PopoverDemo = props => {\n    return (\n        <Popover className={props.className}>\n            <PopoverBody>\n                i am the content;\n            </PopoverBody>\n        </Popover>\n    );\n};\nclass Example extends React.Component {\n    ...\n    render() {\n        return (\n            <div>\n                <PopoverTrigger triggerBy="click" placement={\'top\'} overlay={<PopoverDemo />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >top</Button>\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="click" placement={\'right\'} overlay={<PopoverDemo />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >right</Button>\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="click" placement={\'bottom\'} overlay={<PopoverDemo />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >bottom</Button>\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="click" placement={\'left\'} overlay={<PopoverDemo />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >left</Button>\n                </PopoverTrigger>\n\n                <PopoverTrigger triggerBy="click" placement={\'top-right\'} overlay={<PopoverDemoThemeError />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >top-right</Button>\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="click" placement={\'top-left\'} overlay={<PopoverDemoThemeError />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >top-left</Button>\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="click" placement={\'bottom-left\'} overlay={<PopoverDemoThemeError />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral">bottom-left</Button>\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="click" placement={\'bottom-right\'} overlay={<PopoverDemoThemeError />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral">bottom-right</Button>\n                </PopoverTrigger>\n                \n                <PopoverTrigger triggerBy="click" placement={\'left-top\'} overlay={<PopoverDemoThemeError />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >left-top</Button>\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="click" placement={\'left-bottom\'} overlay={<PopoverDemoThemeError />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >left-bottom</Button>\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="click" placement={\'right-top\'} overlay={<PopoverDemoThemeError />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >right-top</Button>\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="click" placement={\'right-bottom\'} overlay={<PopoverDemoThemeError />}>\n                    <Button style={{marginLeft: \'0px\'}} className="mcds-button__neutral" >right-bottom</Button>\n                </PopoverTrigger>\n            </div>\n        );\n    }\n}\n';

var PopoverThemes = function PopoverThemes() {
    return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
            _index.PopoverTrigger,
            { triggerBy: 'hover', onMouseOver: function onMouseOver(open) {
                    console.log("open", open);
                    setTimeout(function () {
                        open();
                    }, 3000);
                },
                onMouseOut: function onMouseOut(close) {
                    console.log("clos", close);
                    setTimeout(function () {
                        close();
                    }, 3000);
                },
                placement: 'top', overlay: _react2.default.createElement(PopoverDemoThemeInfo, null) },
            _react2.default.createElement(_index2.Button, { style: { marginLeft: '0px' }, className: 'mcds-button__neutral', children: 'info' })
        ),
        _react2.default.createElement(
            _index.PopoverTrigger,
            { triggerBy: 'hover', placement: 'top', overlay: _react2.default.createElement(PopoverDemoThemeSuccess, null) },
            _react2.default.createElement(_index2.Button, { style: { marginLeft: '0px' }, className: 'mcds-button__neutral', children: 'success' })
        ),
        _react2.default.createElement(
            _index.PopoverTrigger,
            { triggerBy: 'hover', placement: 'top', overlay: _react2.default.createElement(PopoverDemoThemeWarning, null) },
            _react2.default.createElement(_index2.Button, { style: { marginLeft: '0px' }, className: 'mcds-button__neutral', children: 'warn' })
        ),
        _react2.default.createElement(
            _index.PopoverTrigger,
            { triggerBy: 'hover', placement: 'top', overlay: _react2.default.createElement(PopoverDemoThemeError, null) },
            _react2.default.createElement(_index2.Button, { style: { marginLeft: '0px' }, className: 'mcds-button__neutral', children: 'error' })
        )
    );
};
var PopoverThemesCode = '\nlet PopoverDemoThemeInfo = props =>\n    <Popover theme="info" className={props.className}>\n        <PopoverBody>\n            theme\u4E3Ainfo\n        </PopoverBody>\n    </Popover>;\n// \u4E3B\u9898\u8272\u4E3Aerror\u7684popover\nlet PopoverDemoThemeError = props =>\n    <Popover theme="error" className={props.className}>\n        <PopoverBody>\n           theme\u4E3Aerror\n        </PopoverBody>\n    </Popover>;\n// \u4E3B\u9898\u8272\u4E3Awarning\u7684popover\nlet PopoverDemoThemeWarning = props =>\n    <Popover theme="warning" className={props.className}>\n        <PopoverBody>\n           theme\u4E3Awarning\n        </PopoverBody>\n    </Popover>;\n// \u4E3B\u9898\u8272\u4E3Asuccess\u7684popover\nlet PopoverDemoThemeSuccess = props =>\n    <Popover theme="success" className={props.className}>\n        <PopoverBody>\n           theme\u4E3Ainfo\n        </PopoverBody>\n    </Popover>;\nclass Example extends React.Component {\n    ...\n    render() {\n        return (\n            <div>\n                <PopoverTrigger triggerBy="hover" onMouseOver={() => {\n                    alert(\'123123\')\n                    console.log("onMouseOver")\n                }} placement={\'top\'} overlay={<PopoverDemoThemeInfo />}>\n                    <ButtonIcon style={{marginLeft: \'0px\'}} className="mcds-button__neutral" icon="mcds-icon__settings-line" />\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="hover" placement={\'top\'} overlay={<PopoverDemoThemeSuccess />}>\n                     <ButtonIcon style={{marginLeft: \'0px\'}} className="mcds-button__neutral" icon="mcds-icon__settings-line" />\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="hover" placement={\'top\'} overlay={<PopoverDemoThemeWarning />}>\n                    <ButtonIcon style={{marginLeft: \'0px\'}} className="mcds-button__neutral" icon="mcds-icon__settings-line" />\n                </PopoverTrigger>\n                <PopoverTrigger triggerBy="hover" placement={\'top\'} overlay={<PopoverDemoThemeError />}>\n                    <ButtonIcon style={{marginLeft: \'0px\'}} className="mcds-button__neutral" icon="mcds-icon__settings-line" />\n                </PopoverTrigger>\n            </div>\n        );\n    }\n}\n';
var intro = '\r\n#### popover 这里的popover将tooltip,popover,overlay等集中在一起.具体使用场景,自行组装\r\n\r\n-  PopoverTrigger 触发器\r\n-  Popover 声明\r\n-  PopoverHead head\r\n-  PopoverBody body\r\n\r\n###### Popover,PopoverHead,PopoverBody用来做弹出层样式的控制可以传入基本的属性如className,style等\r\n\r\n###### PopoverTrigger是popover的触发器 使用方式如下\r\n\r\n```\r\n<PopoverTrigger ...>\r\n\t<anyElemment>                    \r\n</PopoverTrigger>\r\n```\r\n###### PopoverTrigger支持传与以下属性\r\n\r\n- triggerBy 触发方式\r\n\t- click\r\n\t- hover\r\n- placement 弹出层位置信息\r\n\t- top[-,[left,right]]\r\n\t- right[-,[top,bottom]]\r\n\t- bottom[-,[left,right]]\r\n\t- left[-,[top,bottom]]\r\n- overlay 弹出层显示的内容\r\n\r\n##### Popover 支持传入\r\n- theme\r\n\t- success\r\n\t- warning\r\n\t- error\r\n\t- info\r\n\r\noverlay常用以下方式进行拼装\r\n\r\n```\r\n<Popover>\r\n\t<PopoverHead></PopoverHead>\r\n\t<PopoverBody></PopoverBody>\t\r\n</Popover>\r\n```\r\n';
exports.default = [{
    id: 'popover',
    element: _react2.default.createElement(PopoverDefault, null),
    intro: _react2.default.createElement(_reactMarkdown2.default, { className: 'markdown', source: intro }),
    code: PopoverDefaultCode
}, {
    id: 'popoverThemes',
    element: _react2.default.createElement(PopoverThemes, null),
    // intro: 'popover 暂时支持 theme = success, warning, error, info',
    code: PopoverThemesCode
}];
module.exports = exports['default'];