'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactMarkdown = require('react-markdown');

var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

var _index = require('./index');

var _index2 = require('../index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 存放示例
 */
var Directions = ['left', 'right', 'bottom', 'top', 'top-left', 'top-right', 'right-top', 'right-bottom', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom'];
var TableIconRight = _react2.default.createElement('span', { className: 'mcds-icon__right mcds-icon__arrow-right' });

var Test = function (_React$Component) {
    (0, _inherits3.default)(Test, _React$Component);

    function Test(props) {
        (0, _classCallCheck3.default)(this, Test);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Test.__proto__ || (0, _getPrototypeOf2.default)(Test)).call(this, props));

        _this.state = {
            index: 0
        };
        return _this;
    }

    (0, _createClass3.default)(Test, [{
        key: 'handleToggle',
        value: function handleToggle() {
            var index = this.state.index;

            var length = Directions.length;
            if (index + 1 < length) {
                index += 1;
            } else {
                index = 0;
            }
            this.setState({ index: index });
        }
    }, {
        key: 'close',
        value: function close() {
            console.log('this.refs.', this.refs.DropDownTrigger.close());
        }
    }, {
        key: 'open',
        value: function open() {
            console.log('this.refs.', this.refs.DropDownTrigger.open());
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'p',
                    null,
                    'target: body'
                ),
                _react2.default.createElement(
                    _index.DropDownTrigger,
                    {
                        ref: 'DropDownTrigger',
                        onClose: this.handleToggle.bind(this),
                        autoCloseTag: 'close',
                        autoPlacement: true,
                        target: 'body',
                        placement: Directions[this.state.index] },
                    _react2.default.createElement(
                        _index2.Button,
                        { className: 'mcds-button__neutral' },
                        'body-toggleDirection'
                    ),
                    _react2.default.createElement(
                        _index.DropDown,
                        null,
                        _react2.default.createElement(
                            _index.DropDownList,
                            null,
                            _react2.default.createElement(
                                _index.DropDownItem,
                                { isSelected: true, className: 'close' },
                                '\u88AB\u9009\u4E2D\u7684\u52A0\u5165isSelected\u5C5E\u6027'
                            ),
                            _react2.default.createElement(
                                _index.DropDownItem,
                                null,
                                '2'
                            ),
                            _react2.default.createElement(
                                _index.DropDownItem,
                                { onClick: this.open.bind(this) },
                                'open'
                            ),
                            _react2.default.createElement(
                                _index.DropDownItem,
                                { onClick: this.close.bind(this) },
                                'close'
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'p',
                    null,
                    'target: self'
                ),
                _react2.default.createElement(
                    _index.DropDownTrigger,
                    { target: 'self', autoCloseTag: 'close', placement: Directions[this.state.index] },
                    _react2.default.createElement(
                        _index2.Button,
                        { className: 'mcds-button__neutral', onClick: this.handleToggle.bind(this) },
                        'self-toggleDirection'
                    ),
                    _react2.default.createElement(
                        _index.DropDown,
                        null,
                        _react2.default.createElement(
                            _index.DropDownList,
                            null,
                            _react2.default.createElement(
                                _index.DropDownItem,
                                { isSelected: true, iconRight: TableIconRight, className: 'close' },
                                '\u88AB\u9009\u4E2D\u7684\u52A0\u5165isSelected\u5C5E\u6027'
                            ),
                            _react2.default.createElement(
                                _index.DropDownItem,
                                { isSelected: true, iconRight: TableIconRight },
                                '\u88AB\u9009\u4E2D\u7684\u52A0\u5165isSelected\u5C5E\u6027'
                            ),
                            _react2.default.createElement(
                                _index.DropDownItem,
                                null,
                                '3'
                            ),
                            _react2.default.createElement(
                                _index.DropDownItem,
                                null,
                                '4'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return Test;
}(_react2.default.Component);

var intro = '* DropDown(声明组件)\r\n* DropDownList(List容器)\r\n* DropDownItem(单条窗口)\r\n* DropDownTrigger(触发器)\r\n* DropDownItemHeader(item的名称或者分类)\r\n* DropDownItemDivider(分割线)\r\n\r\n##### DropDown\r\nDropdown的open样式是显示的状态.反之隐藏\r\n\r\n```\r\n\t// 封装好的样式\r\n\t<Dropdown className=\"open\"\">\r\n\t\t<DropDownList>\r\n\t\t\t<DropDownItem>1</DropDownItem>\r\n\t\t\t<DropDownItem>1</DropDownItem>\r\n\t\t\t<DropDownItem>1</DropDownItem>\r\n\t\t\t<DropDownItem>1</DropDownItem>\r\n\t\t</DropDownList>\r\n\t</DropDown>\r\n```\r\n\r\n##### DropDownTrigger相关\r\nDropDownTrigger __配合Dropdown使用__.用来做触发器 自身提供 close,open接口方法\r\n\r\n- onOpen     打开的时候的回调\r\n- onClose    关闭时候的回调\r\n- target     挂载点的配置,[body, self]\r\n- autoPlacement 是否自动调整位置(仅适用于target=self)\r\n- offset     弹出框距离target的偏移量\r\n- className  弹出框上追加的className\r\n- autoCloseTag 自动关闭的标识className\r\n- placement  打开的位置\r\n\r\n```\r\n\t// 支持的位置信息\r\n\tconst Direction = [\r\n    \"left\",\r\n    \"right\",\r\n    \"bottom\",\r\n    \"top\",\r\n    \"top-left\",\r\n    \"top-right\",\r\n    \"right-top\",\r\n    \"right-bottom\",\r\n    \"bottom-left\",\r\n    \"bottom-right\",\r\n    \"left-top\",\r\n    \"left-bottom\"\r\n\t]\r\n\t<DropDownTrigger>\r\n\t\t<Any /> //任意触发开关\r\n\t\t<DropDown />\r\n\t</DropDownTrigger>\r\n```\r\n\r\n*className=mcds-dropdown__position-right* 弹出位置为左侧 __已废弃__\r\n\r\n*className=mcds-dropdown__min-no || mcds-dropdown__max-no* 取消下拉最小或最大宽度 \r\n\r\n\r\n##### DropDown,DropDownList,支持传入任意基本属性 DropDownList支持嵌套\r\n\r\n##### DropDownItem支持下以自定义属性\r\n\r\n- iconLeft (左侧图标)\r\n- iconRight (右侧图标)\r\n- isSelected (是否被选中)\r\n\r\n##### DropDownItemDivider不支持传入属性,如果更改样式,可以DropDown追加样式去更改子类\"mcds-dropdown__divider\"的样式\r\n';
exports.default = [{
    id: 'DropDown',
    element: _react2.default.createElement(Test, null),
    intro: _react2.default.createElement(_reactMarkdown2.default, { className: 'markdown', source: intro })
}];
// "###提供以下几种组件

// *   DropDown
// *   DropDownList,
// *   DropDownItem
// *   DropDownItemHeader,
// *   DropDownItemDivider"

module.exports = exports['default'];