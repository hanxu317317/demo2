'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _util = require('./util');

var _dom = require('../../../../utils/dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// 定义位置
// const Target = ['self', 'body'];
// const Direction = [
//     'top-left',
//     'top-right',
//     'right-top',
//     'right-bottom',
//     'bottom-left',
//     'bottom-right',
//     'left-top',
//     'left-bottom'
// ]


var SelfDropDownTrigger = function (_React$Component) {
    (0, _inherits3.default)(SelfDropDownTrigger, _React$Component);

    function SelfDropDownTrigger() {
        (0, _classCallCheck3.default)(this, SelfDropDownTrigger);

        var _this = (0, _possibleConstructorReturn3.default)(this, (SelfDropDownTrigger.__proto__ || (0, _getPrototypeOf2.default)(SelfDropDownTrigger)).call(this));

        _this.state = {
            open: false,
            display: 'none'
        };
        _this.handleOutsideMouseClick = _this.handleOutsideMouseClick.bind(_this);
        _this.node = null;
        _this.close = _this.close.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(SelfDropDownTrigger, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            try {
                var counts = _react2.default.Children.count(this.props.children);
                if (counts !== 2) {
                    throw new Error('DropDownTrigger children must be two,like\r\n<DropDownTrigger>\r\n\t<any>click</any>\r\n\t<Dropdown />\r\n</DropDownTrigger>');
                }
            } catch (e) {
                console.log(e);
            }
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var closeOnOutsideClick = this.props.closeOnOutsideClick;

            if (closeOnOutsideClick) {
                document.addEventListener('mouseup', this.handleOutsideMouseClick);
                document.addEventListener('touchstart', this.handleOutsideMouseClick);
            }
            this.isMount = true;
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            var closeOnOutsideClick = this.props.closeOnOutsideClick;

            if (closeOnOutsideClick) {
                document.removeEventListener('mouseup', this.handleOutsideMouseClick);
                document.removeEventListener('touchstart', this.handleOutsideMouseClick);
            }
            this.isMount = false;
        }
    }, {
        key: 'handleOutsideMouseClick',
        value: function handleOutsideMouseClick(e) {

            if (!this.state.open) {
                return;
            }
            var root = this.refs.triggerWrap;
            this.handleCheckAutoClose(e);
            if (root.contains(e.target) || e.button && e.button !== 0) {
                return;
            }
            e.stopPropagation();
            this.close();
        }
    }, {
        key: 'handleCheckAutoClose',
        value: function handleCheckAutoClose(e) {
            var autoCloseTag = this.props.autoCloseTag;

            if (!autoCloseTag) {
                return false;
            }
            var path = e.path;

            var hasClose = false;

            for (var i = 0; i < path.length; i++) {
                hasClose = (0, _dom.hasClass)(path[i], autoCloseTag);
                if (hasClose) {
                    break;
                }
            }
            // 如果路径上有,关闭的tag
            if (hasClose) {
                this.close();
            }
        }
    }, {
        key: '_handleToggle',
        value: function _handleToggle(e) {
            var display = this.state.display;

            if (display === 'none') {
                this.open();
            } else {
                this.close();
            }
            e.stopPropagation();
        }
    }, {
        key: 'open',
        value: function open() {
            var _this2 = this;

            var display = 'block';
            this.setState({ display: display });

            setTimeout(function () {
                _this2.props.onOpen();
                _this2.setPosition();
                if (_this2.isMount) {
                    _this2.setState({ open: !_this2.state.open });
                }
            }, 100);
        }
    }, {
        key: 'close',
        value: function close() {
            var _this3 = this;

            this.setState({ open: false });
            setTimeout(function () {
                _this3.props.onClose();
                if (_this3.isMount) {
                    _this3.setState({ display: 'none' });
                }
            }, 100);
        }
    }, {
        key: 'getTargetPosition',
        value: function getTargetPosition() {
            var trigger = this.refs.triggerWrap; // 暂时找不到同好的办法获取children的dom节点
            var childrenTarget = trigger.children[0] || [];
            var positionInfo = (0, _util.getPosition)(childrenTarget);
            return positionInfo;
        }
    }, {
        key: 'getDropDownPosition',
        value: function getDropDownPosition() {
            var wrap = this.refs.triggerWrap;
            var dropdown = wrap.querySelector('.___dropdown');
            // console.log("dropdown", dropdown);
            var positionInfo = (0, _util.getPosition)(dropdown);

            return positionInfo;
        }
    }, {
        key: 'setPosition',
        value: function setPosition() {
            var _props = this.props,
                placement = _props.placement,
                offset = _props.offset,
                synchWidth = _props.synchWidth;
            // 容器div

            var wrap = this.refs.triggerWrap;
            // 按钮位置信息
            var buttonPos = this.getTargetPosition();
            // 下拉的位置信息
            var dropDownPos = this.getDropDownPosition();

            var dropDownEle = wrap.querySelector('.___dropdown');

            var position = (0, _util.calculateSelfPosition)(placement, buttonPos, dropDownPos, offset);

            dropDownEle.style.left = position.left + 'px';
            dropDownEle.style.top = position.top + 'px';
            dropDownEle.style.marginTop = 0;
            if (synchWidth) {
                dropDownEle.style.width = buttonPos.width + 'px';
                dropDownEle.style.minWidth = 'initial';
                dropDownEle.style.maxWidth = 'initial';
            }
        }
    }, {
        key: 'renderTrigger',
        value: function renderTrigger() {
            var _this4 = this;

            var children = _react2.default.Children.toArray(this.props.children);
            if (!children[0]) {
                return false;
            }
            // let oldOnClick =
            var onClickFun = function onClickFun(e) {
                if (children[0].props.onClick) {
                    children[0].props.onClick(e);
                }
                _this4._handleToggle(e);
            };
            var firstChild = _react2.default.cloneElement(children[0], { onClick: onClickFun });
            return firstChild;
        }
    }, {
        key: 'renderDropdown',
        value: function renderDropdown() {
            var children = _react2.default.Children.toArray(this.props.children);
            if (!children[1]) {
                return false;
            }
            var className = (0, _classnames2.default)(children[1].props.className, { open: this.state.open, ___dropdown: true });
            var secondChild = _react2.default.cloneElement(children[1], { className: className, style: { display: this.state.display } });
            return secondChild;
        }
    }, {
        key: 'render',
        value: function render() {
            var className = this.props.className;

            return _react2.default.createElement(
                'div',
                { ref: 'triggerWrap', className: (0, _classnames2.default)('mcds-dropdown__trigger', className) },
                this.renderTrigger(),
                this.renderDropdown()
            );
        }
    }]);
    return SelfDropDownTrigger;
}(_react2.default.Component);

SelfDropDownTrigger.propTypes = {
    children: _propTypes2.default.any.isRequired,
    className: _propTypes2.default.string,
    placement: _propTypes2.default.string, // 方向
    onClose: _propTypes2.default.func,
    closeOnOutsideClick: _propTypes2.default.bool,
    synchWidth: _propTypes2.default.bool,
    offset: _propTypes2.default.number,
    onOpen: _propTypes2.default.func,
    autoCloseTag: _propTypes2.default.string
};
exports.default = SelfDropDownTrigger;

SelfDropDownTrigger.defaultProps = {
    onClose: function onClose() {},
    onOpen: function onOpen() {},
    placement: 'right'
};
module.exports = exports['default'];