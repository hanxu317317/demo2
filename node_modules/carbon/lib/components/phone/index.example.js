'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactMarkdown = require('react-markdown');

var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _index = require('./index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 存放示例
 */
var phoneCode = '\n    class PhoneDemo extends React.Component {\n    static propTypes = {\n        placeholder: PropTypes.string,\n        className: PropTypes.string,\n        onChange: PropTypes.func,\n        value: PropTypes.string,\n        error: PropTypes.bool\n    }\n    constructor(props) {\n        super(props);\n    }\n    handleChange(val){\n        // let { onChange } = this.props;\n        // onChange(val);\n    }\n\n    render() {\n        let dictionary = {CN: \'\u4E2D\u56FD\', RU: \'\u4FC4\u7F57\u65AF\', US: \'\u7F8E\u56FD\'};\n        let country = \'CN\';\n        let countries = [\'CN\', \'US\', \'RU\'];\n        let { error = false, value, onChange } = this.props;\n        return (\n                <Phone\n                    error={error}\n                    dictionary={dictionary}\n                    international={false}\n                    onChange={::this.handleChange}\n                    country={country}\n                    countries={countries}\n                    nativeExpanded={false}\n                    value={value} />\n        );\n    }\n}\n';

var PhoneDemo = function (_React$Component) {
    (0, _inherits3.default)(PhoneDemo, _React$Component);

    function PhoneDemo(props) {
        (0, _classCallCheck3.default)(this, PhoneDemo);
        return (0, _possibleConstructorReturn3.default)(this, (PhoneDemo.__proto__ || (0, _getPrototypeOf2.default)(PhoneDemo)).call(this, props));
    }

    (0, _createClass3.default)(PhoneDemo, [{
        key: 'render',
        value: function render() {
            var dictionary = { CN: '中国', RU: '俄罗斯', US: '美国' };
            var country = 'CN';
            var countries = ['CN', 'US', 'RU'];
            var _props = this.props,
                _props$error = _props.error,
                error = _props$error === undefined ? true : _props$error,
                _props$active = _props.active,
                active = _props$active === undefined ? true : _props$active,
                value = _props.value;

            return _react2.default.createElement(_index.Phone, {
                error: error,
                active: active,
                dictionary: dictionary,
                international: false,
                onChange: function onChange() {},
                country: country,
                countries: countries,
                nativeExpanded: false,
                value: value });
        }
    }]);
    return PhoneDemo;
}(_react2.default.Component);

PhoneDemo.propTypes = {
    placeholder: _propTypes2.default.string,
    className: _propTypes2.default.string,
    onChange: _propTypes2.default.func,
    value: _propTypes2.default.string,
    error: _propTypes2.default.bool,
    active: _propTypes2.default.bool
};
exports.default = [{
    id: 'PhoneDemo',
    element: _react2.default.createElement(PhoneDemo, null),
    intro: _react2.default.createElement(_reactMarkdown2.default, { className: 'markdown', source: phoneCode })
}];
module.exports = exports['default'];