'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FixedInput = exports.ReadOnlyFixedText = exports.ReadOnlyInput = exports.DisabledInput = exports.Input = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function checkString(ele, className) {
    if (!ele) {
        return false;
    }
    if (typeof ele === 'string') {
        return _react2.default.createElement('span', { className: ele + ' ' + className });
    }
    var tmp = _react2.default.cloneElement(ele);
    return _react2.default.cloneElement(ele, { className: tmp.props.className + ' ' + (className || '') });
} /* eslint-disable */


function handleLabel(label, id) {
    if (!label) {
        return false;
    }
    if (typeof label === 'string') {
        return _react2.default.createElement(
            'label',
            { className: 'mcds-label' },
            label
        );
    }
    return _react2.default.cloneElement(label, { className: 'mcds-label', htmlFor: id });
}

var Input = exports.Input = function (_React$Component) {
    (0, _inherits3.default)(Input, _React$Component);

    function Input(props) {
        (0, _classCallCheck3.default)(this, Input);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Input.__proto__ || (0, _getPrototypeOf2.default)(Input)).call(this, props));

        _this.state = { error: _this.props.error };
        return _this;
    }

    (0, _createClass3.default)(Input, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var error = nextProps.error;
            this.setState({ error: error });
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var active = this.props.active;

            if (active === true) {
                this.refs.node && this.refs.node.focus();
            }
        }
    }, {
        key: 'handleChange',
        value: function handleChange() {
            this.props.onChange(this.refs.node.value);
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                className = _props.className,
                id = _props.id,
                label = _props.label,
                placeholder = _props.placeholder,
                iconLeft = _props.iconLeft,
                onClick = _props.onClick,
                iconRight = _props.iconRight,
                error = _props.error,
                active = _props.active,
                others = (0, _objectWithoutProperties3.default)(_props, ['className', 'id', 'label', 'placeholder', 'iconLeft', 'onClick', 'iconRight', 'error', 'active']);

            return _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)('mcds-input__container', className, { 'mcds-input__border': error }) },
                handleLabel(label, id),
                _react2.default.createElement(
                    'div',
                    { className: 'mcds-form__control', onClick: onClick },
                    checkString(iconLeft, 'mcds-search__left'),
                    _react2.default.createElement('input', (0, _extends3.default)({}, others, {
                        className: (0, _classnames2.default)('mcds-input', { 'mcds-left__search': iconLeft, 'mcds-right__search': iconRight }),
                        id: id,
                        type: 'text',
                        placeholder: placeholder,
                        autoComplete: 'off',
                        ref: 'node',
                        onChange: this.handleChange.bind(this) })),
                    checkString(iconRight, 'mcds-search__right')
                )
            );
        }
    }]);
    return Input;
}(_react2.default.Component);

Input.defaultProps = {
    onChange: function onChange() {}
};

Input.propTypes = {
    id: _propTypes2.default.string,
    label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
    className: _propTypes2.default.string,
    placeholder: _propTypes2.default.string,
    onChange: _propTypes2.default.func,
    onClick: _propTypes2.default.func,
    iconRight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
    iconLeft: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
    error: _propTypes2.default.bool,
    active: _propTypes2.default.bool
};

// disabled input
var DisabledInput = function DisabledInput(_ref) {
    var id = _ref.id,
        className = _ref.className,
        label = _ref.label,
        placeholder = _ref.placeholder,
        error = _ref.error,
        others = (0, _objectWithoutProperties3.default)(_ref, ['id', 'className', 'label', 'placeholder', 'error']);
    return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('mcds-input__container', className, { 'mcds-input__border': error }) },
        label ? _react2.default.createElement(
            'label',
            { className: 'mcds-label', htmlFor: id },
            label
        ) : null,
        _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement('input', (0, _extends3.default)({}, others, {
                className: 'mcds-input mcds-disabled',
                id: id, type: 'text',
                placeholder: placeholder,
                autoComplete: 'off',
                disabled: true }))
        )
    );
};

exports.DisabledInput = DisabledInput;
DisabledInput.propTypes = {
    id: _propTypes2.default.string,
    label: _propTypes2.default.string,
    className: _propTypes2.default.string,
    placeholder: _propTypes2.default.string,
    error: _propTypes2.default.bool
};

// 只读input
var ReadOnlyInput = exports.ReadOnlyInput = function ReadOnlyInput(_ref2) {
    var className = _ref2.className,
        label = _ref2.label,
        value = _ref2.value,
        error = _ref2.error;
    return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('mcds-input__container', className, { 'mcds-input__border': error }) },
        label ? _react2.default.createElement(
            'label',
            { className: 'mcds-label' },
            label
        ) : null,
        _react2.default.createElement(
            'div',
            { className: 'mcds-bottom__line' },
            _react2.default.createElement(
                'span',
                { className: 'mcds-readonly__span' },
                value
            )
        )
    );
};

ReadOnlyInput.propTypes = {
    label: _propTypes2.default.string,
    className: _propTypes2.default.string,
    value: _propTypes2.default.any,
    error: _propTypes2.default.bool
};

// 左右带符号的只读text
var ReadOnlyFixedText = exports.ReadOnlyFixedText = function ReadOnlyFixedText(_ref3) {
    var className = _ref3.className,
        label = _ref3.label,
        left = _ref3.left,
        right = _ref3.right,
        value = _ref3.value,
        error = _ref3.error;
    return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('mcds-input__container', className, { 'mcds-input__border': error }) },
        label ? _react2.default.createElement(
            'label',
            { className: 'mcds-label' },
            label
        ) : null,
        _react2.default.createElement(
            'div',
            { className: 'mcds-bottom__line' },
            _react2.default.createElement(
                'span',
                { className: 'mcds-p__r-8 mcds-readonly-span__addon' },
                left
            ),
            _react2.default.createElement(
                'span',
                { className: 'mcds-readonly__span' },
                value
            ),
            _react2.default.createElement(
                'span',
                { className: 'mcds-p__l-8' },
                right
            )
        )
    );
};

ReadOnlyFixedText.propTypes = {
    label: _propTypes2.default.string,
    className: _propTypes2.default.string,
    left: _propTypes2.default.string,
    right: _propTypes2.default.string,
    value: _propTypes2.default.any,
    error: _propTypes2.default.bool
};

// 左右带符号的input
var FixedInput = function FixedInput(_ref4) {
    var className = _ref4.className,
        value = _ref4.value,
        label = _ref4.label,
        placeholder = _ref4.placeholder,
        left = _ref4.left,
        right = _ref4.right,
        _onChange = _ref4.onChange,
        error = _ref4.error,
        others = (0, _objectWithoutProperties3.default)(_ref4, ['className', 'value', 'label', 'placeholder', 'left', 'right', 'onChange', 'error']);
    return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('mcds-input__container', className, { 'mcds-input__border': error }) },
        label ? _react2.default.createElement(
            'label',
            { className: 'mcds-label' },
            label
        ) : null,
        _react2.default.createElement(
            'div',
            { className: 'mcds-fiexed__container' },
            left ? _react2.default.createElement(
                'span',
                { className: 'mcds-input-span__addon mcds-mg__right' },
                left
            ) : '',
            _react2.default.createElement('input', {
                value: value,
                className: 'mcds-input',
                type: 'text',
                placeholder: placeholder,
                onChange: function onChange(e) {
                    _onChange(e.target.value);
                },
                autoComplete: 'off' }),
            right ? _react2.default.createElement(
                'span',
                { className: 'mcds-input-span__addon mcds-mg__left' },
                right
            ) : ''
        )
    );
};

exports.FixedInput = FixedInput;
FixedInput.defaultProps = {
    onChange: function onChange() {}
};

FixedInput.propTypes = {
    label: _propTypes2.default.string,
    className: _propTypes2.default.string,
    left: _propTypes2.default.string,
    right: _propTypes2.default.string,
    value: _propTypes2.default.any,
    placeholder: _propTypes2.default.any,
    onChange: _propTypes2.default.func,
    error: _propTypes2.default.bool
};