'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _index = require('./index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import ReactMarkdown from 'react-markdown';

var ButtonLoadingDemoCode = '\nclass Example extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true\n        }\n    }\n\n    handleClick() {\n        this.setState({\n            isLoading: !this.state.isLoading\n        })\n    }\n    render() {\n        return (\n            <ButtonLoading \n                isLoading={this.state.isLoading}\n                onClick={this.handleClick.bind(this)}\n                className="mcds-button__brand">\n                loading\n            </ButtonLoading>\n        );\n    }\n}';

var ButtonLoadingDemo = function (_Component) {
    (0, _inherits3.default)(ButtonLoadingDemo, _Component);

    function ButtonLoadingDemo(props) {
        (0, _classCallCheck3.default)(this, ButtonLoadingDemo);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ButtonLoadingDemo.__proto__ || (0, _getPrototypeOf2.default)(ButtonLoadingDemo)).call(this, props));

        _this.state = {
            isLoading: true
        };
        return _this;
    }

    (0, _createClass3.default)(ButtonLoadingDemo, [{
        key: 'handleClick',
        value: function handleClick() {
            this.setState({
                isLoading: !this.state.isLoading
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _index.ButtonLoading,
                {
                    isLoading: this.state.isLoading,
                    onClick: this.handleClick.bind(this),
                    className: 'mcds-button__brand' },
                'loading'
            );
        }
    }]);
    return ButtonLoadingDemo;
}(_react.Component);

exports.default = [{
    id: 'Button',
    element: _react2.default.createElement(
        _index.Button,
        null,
        'base button'
    )
}, {
    id: 'Neutral',
    element: _react2.default.createElement(
        _index.Button,
        { className: 'mcds-button__neutral', onClick: function onClick() {
                return console.log(1);
            } },
        'Button Neutral'
    )
}, {
    id: 'NeutralDisabled',
    element: _react2.default.createElement(
        _index.Button,
        { className: 'mcds-button__neutral', disabled: true },
        'Button Neutral'
    )
}, {
    id: 'NeutralIconLeft',
    element: _react2.default.createElement(
        _index.Button,
        { className: 'mcds-button__neutral' },
        _react2.default.createElement('i', { className: 'mcds-icon__left mcds-icon__triangle-solid-14' }),
        'Button Neutral'
    )
}, {
    id: 'NeutralIconRight',
    element: _react2.default.createElement(
        _index.Button,
        { className: 'mcds-button__neutral' },
        'Button Neutral',
        _react2.default.createElement('i', { className: 'mcds-icon__right mcds-icon__triangle-solid-14' })
    )
}, {
    id: 'Brand',
    element: _react2.default.createElement(
        _index.Button,
        { className: 'mcds-button__brand' },
        'Button brand'
    )
}, {
    id: 'BrandDisabled',
    element: _react2.default.createElement(
        _index.Button,
        { className: 'mcds-button__brand', disabled: true },
        'Button Brand'
    )
}, {
    id: 'Destructive',
    element: _react2.default.createElement(
        _index.Button,
        { className: 'mcds-button__destructive' },
        'Button Destructive'
    )
}, {
    id: 'DestructiveDisabled',
    element: _react2.default.createElement(
        _index.Button,
        { className: 'mcds-button__destructive', disabled: true },
        'Button DestructiveDisabled'
    )
}, {
    id: 'ButtonLoading',
    element: _react2.default.createElement(ButtonLoadingDemo, null),
    code: ButtonLoadingDemoCode
}, {
    id: 'ButtonSuccess',
    element: _react2.default.createElement(
        _index.Button,
        { className: 'mcds-button__success', disabled: true },
        'Button Success'
    )
}, {
    id: 'statefulButton',
    element: _react2.default.createElement(
        _index.StatefulButton,
        { icon: 'mcds-icon__add-line-20', hoverIcon: 'mcds-icon__arrow-line-20' },
        'Following'
    )
}];
module.exports = exports['default'];