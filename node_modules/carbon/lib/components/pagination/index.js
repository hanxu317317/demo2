'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _form = require('../form');

var _buttons = require('../buttons');

var _popover = require('../popover');

var _dropdown = require('../dropdown');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// 默认显示的数量 15个 最小为8
var defaultShowCell = 15;
var defaultOptions = {
    showPrevious: true,
    showNext: true,
    showJumpPage: true,
    showPerPageCount: true,

    previousText: '上一页',
    nexText: '下一页',
    GotoText: '跳转',
    goToPlaceHoler: '页数',
    PerPageCountTemp: '`每页 ${count} 条`'
};
/* eslint no-new-func: off */
function getPerPageCountTemp(count, temp) {
    var str = 'return ' + temp;
    var func = new Function('count', str);
    if (count) {
        return func(count);
    }
}

var Pagination = function (_Component) {
    (0, _inherits3.default)(Pagination, _Component);

    function Pagination() {
        (0, _classCallCheck3.default)(this, Pagination);
        return (0, _possibleConstructorReturn3.default)(this, (Pagination.__proto__ || (0, _getPrototypeOf2.default)(Pagination)).apply(this, arguments));
    }

    (0, _createClass3.default)(Pagination, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.options = (0, _assign2.default)(defaultOptions, this.props.options);
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var parent = this.refs.pagination;
            var input = parent.querySelector('input');
            this.input = input;
            document.addEventListener('keydown', this.onEnterKeyDown.bind(this));
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            delete this.input;
            document.removeEventListener('keydown', this.onEnterKeyDown.bind(this));
        }

        // 回车跳页

    }, {
        key: 'onEnterKeyDown',
        value: function onEnterKeyDown(e) {
            if (e.keyCode === 13 && document.activeElement === this.input) {
                this.jumpPage();
            }
        }
        // 当每页显示数量改变

    }, {
        key: 'onPerPageChange',
        value: function onPerPageChange(count) {
            this.setState({ perPageCountValue: getPerPageCountTemp(count, this.options.PerPageCountTemp) });
            this.props.onPerPageChange(count);
        }
    }, {
        key: 'changePage',
        value: function changePage(pageNum) {
            if (pageNum !== this.props.current) {
                this.props.onChange(pageNum);
            }
        }
    }, {
        key: 'renderPagination',
        value: function renderPagination(pageNum) {
            var className = pageNum === this.props.current ? 'active' : '';
            return _react2.default.createElement(
                'li',
                { key: pageNum, className: className + ' mcds-list__item', onClick: this.changePage.bind(this, pageNum) },
                pageNum
            );
        }

        /**
         * 生成省略号部分
         * @Author   HX
         * @DateTime 2017-02-22T15:32:13+0800
         * @param    {array}                         range 范围 [0,100]
         * @return   {element}                       [description]
         */

    }, {
        key: 'renderOmit',
        value: function renderOmit(from, to) {
            var items = [];
            if (to - from <= 0) {
                return false;
            }
            for (var i = from; i < to; i++) {
                items.push(_react2.default.createElement(
                    _dropdown.DropDownItem,
                    { key: i, onClick: this.changePage.bind(this, i) },
                    i
                ));
            }
            var key = from === 2 ? 'from' : 'to';
            var overlay = _react2.default.createElement(
                _popover.Popover,
                null,
                _react2.default.createElement(
                    _popover.PopoverHead,
                    null,
                    _react2.default.createElement(
                        _dropdown.DropDownList,
                        null,
                        items
                    )
                )
            );
            return _react2.default.createElement(
                'li',
                { className: 'mcds-list__item', key: key },
                _react2.default.createElement(
                    _popover.PopoverTrigger,
                    { className: 'mcds-popselect mcds-pagination__omit', triggerBy: 'click', placement: 'top', overlay: overlay },
                    _react2.default.createElement(
                        'div',
                        null,
                        '...'
                    )
                )
            );
        }
    }, {
        key: 'renderPages',
        value: function renderPages() {
            var _props = this.props,
                current = _props.current,
                total = _props.total;

            var start = 2;
            var end = 0;

            // 中心点
            if (total > defaultShowCell) {
                if (current <= Math.ceil(defaultShowCell / 2)) {
                    start = 2;
                    end = start + defaultShowCell - 3;
                } else if (current > total - Math.ceil(defaultShowCell / 2)) {
                    start = total - defaultShowCell + 3;
                    end = total;
                } else {
                    start = current - Math.ceil((defaultShowCell - 4) / 2);
                    end = start + defaultShowCell - 4;
                }
            } else {
                start = 2;
                end = total;
            }

            var pagination = [];

            var first = this.renderPagination(1);
            var last = this.renderPagination(total);

            pagination.push(first);
            pagination.push(this.renderOmit(2, start));

            for (var i = start; i < end; i++) {
                pagination.push(this.renderPagination(i));
            }

            pagination.push(this.renderOmit(end, total));
            if (total !== 1) {
                pagination.push(last);
            }
            return pagination;
        }

        // 每页展示数

    }, {
        key: 'renderPerPage',
        value: function renderPerPage() {
            var perPage = [];
            var defaultValue = getPerPageCountTemp(this.props.perPageCountValue, this.options.PerPageCountTemp);
            this.props.perPage.forEach(function (v) {
                perPage.push(_react2.default.createElement(
                    'option',
                    { key: 'counts-' + v, value: v },
                    v
                ));
            });
            return _react2.default.createElement(
                _form.Select,
                { value: defaultValue, onChange: this.onPerPageChange.bind(this) },
                perPage
            );
        }
        // 上一页

    }, {
        key: 'prePage',
        value: function prePage() {
            var current = this.props.current;

            if (current > 1) {
                this.changePage(current - 1);
            }
        }

        // 下一页

    }, {
        key: 'nextPage',
        value: function nextPage() {
            var _props2 = this.props,
                current = _props2.current,
                total = _props2.total;

            if (current < total) {
                this.changePage(current + 1);
            }
        }
        // 跳页

    }, {
        key: 'jumpPage',
        value: function jumpPage() {
            var pageNumber = parseInt(this.input.value);
            if (!isNaN(pageNumber)) {
                this.changePage(pageNumber);
            }
        }

        // 对跳转页进行限制

    }, {
        key: '_handleOnKeyUp',
        value: function _handleOnKeyUp() {
            var total = this.props.total;

            var input = this.input;
            if (input.value.length === 1) {
                input.value = input.value.replace(/[^1-9]+/, '');
            } else {
                input.value = input.value.replace(/\D/g, '');
            }

            if (input.value > total) {
                input.value = total;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props3 = this.props,
                current = _props3.current,
                total = _props3.total,
                className = _props3.className;

            var perPage = this.renderPerPage();
            var showPrev = false;
            var showNext = false;

            if (current > 1) {
                showPrev = true;
            }

            if (current < total) {
                showNext = true;
            }
            return _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)('mcds-pagination', className), ref: 'pagination', id: 'pagination' },
                _react2.default.createElement(
                    'ul',
                    { className: 'mcds-pagination__pages mcds-list__horizontal' },
                    _react2.default.createElement(
                        'li',
                        { className: (0, _classnames2.default)('mcds-pagination__pre mcds-list__item', { weak: !showPrev, hide: !this.options.showPrevious }), onClick: this.prePage.bind(this) },
                        _react2.default.createElement('i', { className: 'mcds-icon__left mcds-icon__previous mcds-icon__size-15' }),
                        _react2.default.createElement(
                            'span',
                            null,
                            this.options.previousText
                        )
                    ),
                    this.renderPages(),
                    _react2.default.createElement(
                        'li',
                        { className: (0, _classnames2.default)('mcds-pagination__next mcds-list__item', { weak: !showNext, hide: !this.options.showNext }), onClick: this.nextPage.bind(this) },
                        _react2.default.createElement(
                            'span',
                            null,
                            this.options.nexText
                        ),
                        _react2.default.createElement('i', { className: 'mcds-icon__right mcds-icon__next mcds-icon__size-15' })
                    ),
                    _react2.default.createElement(
                        'li',
                        { className: (0, _classnames2.default)('mcds-list__item mcds-pagination__jump', { hide: !this.options.showJumpPage }) },
                        _react2.default.createElement(_form.Input, { className: 'mcds-pagination__jump', onKeyUp: this._handleOnKeyUp.bind(this), placeholder: this.options.goToPlaceHoler })
                    ),
                    _react2.default.createElement(
                        'li',
                        { className: (0, _classnames2.default)('mcds-list__item mcds-pagination__submite', { hide: !this.options.showPerPageCount }), onClick: this.jumpPage.bind(this) },
                        _react2.default.createElement(
                            _buttons.Button,
                            null,
                            this.options.GotoText
                        )
                    ),
                    _react2.default.createElement(
                        'li',
                        { className: 'mcds-list__item mcds-pagination__perpage' },
                        perPage
                    )
                )
            );
        }
    }]);
    return Pagination;
}(_react.Component);

Pagination.propTypes = {
    showTotal: _propTypes2.default.bool,
    current: _propTypes2.default.number.isRequired,
    total: _propTypes2.default.number.isRequired,
    onChange: _propTypes2.default.func
};
Pagination.defaultProps = {
    onChange: function onChange() {
        return null;
    }
};

Pagination.propTypes = {
    current: _propTypes2.default.number.isRequired,
    className: _propTypes2.default.string,
    options: _propTypes2.default.object,
    perPage: _propTypes2.default.array,
    total: _propTypes2.default.number.isRequired,
    perPageCountValue: _propTypes2.default.number,
    onChange: _propTypes2.default.func,
    onPerPageChange: _propTypes2.default.func
};

Pagination.defaultProps = {
    onChange: function onChange() {},
    perPage: [15, 25, 50],
    onPerPageChange: function onPerPageChange() {}
};

exports.default = {
    Pagination: Pagination
};
module.exports = exports['default'];