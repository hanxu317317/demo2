'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactMarkdown = require('react-markdown');

var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

var _index = require('./index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Example = function (_Component) {
    (0, _inherits3.default)(Example, _Component);

    function Example() {
        (0, _classCallCheck3.default)(this, Example);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Example.__proto__ || (0, _getPrototypeOf2.default)(Example)).call(this));

        _this.state = {
            current: 1,
            perPageCountValue: 9
        };
        return _this;
    }

    (0, _createClass3.default)(Example, [{
        key: 'setPage',
        value: function setPage(i) {
            this.setState({ current: i });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(_index.Pagination, {
                perPage: [1, 2, 3, 4, 5, 6, 7],
                options: { showPrevious: false, showNext: false },
                perPageCountValue: this.state.perPageCountValue,
                onPerPageChange: function onPerPageChange(v) {
                    console.log('perPage change' + v);_this2.setState({ perPageCountValue: v });
                },
                current: this.state.current,
                onChange: this.setPage.bind(this),
                total: 16 });
        }
    }]);
    return Example;
}(_react.Component);

var ExampleCode = '\nclass Example extends Component {\n    constructor(){\n        super();\n        this.state = {\n            current: 1,\n            perPageCountValue: 9\n        };\n    }\n    setPage(i) {\n        this.setState({current: i});\n    }\n\n    render() {\n        return (\n            <Pagination\n                perPage={[1, 2, 3, 4, 5, 6, 7]}\n                options={{showPrevious: true, showNext: true}}\n                perPageCountValue={this.state.perPageCountValue}\n                onPerPageChange={(v)=>{}}\n                current={this.state.current}\n                onChange={this.setPage.bind(this)}\n                total={16} />\n        );\n    }\n}\n';
var intro = '##### pagination\r\n\r\n###### pagination支持以下参数\r\n- perPage [array] 每页展示数的可选范围\r\n- perPageCountValue perPage的默认值\r\n- onPerPageChange 在perPageCountValue更新是触发\r\n- current 当前页码\r\n- onChange 当页数跳转回调\r\n- total 总页数\r\n- options 配置项目\r\n\r\n###### perPage相关\r\nperPage默认值为[15, 25, 50]\r\n\r\n##### current相关\r\n这个需要回调自己操作,组件内部没有逻辑,每次回调自己更新\r\n\r\n\r\n###### options相关\r\n\r\n```\r\n{\r\n    showPrevious: true, //是否显示上一页\r\n    showNext: true, //是否显示下一页\r\n    showJumpPage: true, //是否显示跳转到X页\r\n    showPerPageCount: true, //是不显示每页显示XX\r\n\t//对应文本信息\r\n    previousText: \"Previous\", \r\n    nexText: \"Next\",\r\n    GotoText: \"Go!\",\r\n    goToPlaceHoler: \"Jump To\",\r\n    PerPageCountTemp: \"`Show ${count} PerPage`\"\r\n};\r\n````';
exports.default = [{
    id: 'pagination',
    element: _react2.default.createElement(Example, null),
    intro: _react2.default.createElement(_reactMarkdown2.default, { className: 'markdown', source: intro }),
    code: ExampleCode
}];
module.exports = exports['default'];